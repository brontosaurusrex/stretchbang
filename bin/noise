#!/bin/bash

# noise (lite)

# give me some noise for wallpaper

# required: imagemagick, nitrogen
# wouldbenice: seen (script)

# usage, order of parameters is important:
# noise
# noise royal
# noise -t
# noise royal -t
# noise night -t "string"
# noise _ ++ _              # increase saturation for 20%
# noise deep + +            # increase brightness and saturation for 10%

# checks
command -v convert >/dev/null 2>&1 || { echo "I need imagemagick convert, exiting." >&2; exit 1; }
command -v nitrogen >/dev/null 2>&1 || { echo "I need nitrogen, exiting." >&2; exit 1; }

# store & vars
file="/tmp/noise.png"   # final wallpaper

# resolution
mx=1920; my=1200

# help
if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then

cat <<EOF
Order of parameters does matter:

    noise color-preset brightnes saturation hue level-dynamics level-start
    # color-preset may be omited

examples:

    noise                           # default
    noise deep                      # with color preset 'deep'
    noise deep +                    # with color preset 'deep' and 10% brighter
    noise - +++                     # default, but 10% darker and 30% more saturated
    noise deep _ +++++ _ + ---      # preset 'deep' and 50% more saturated,
                                    # slightly more dynamics and darker level start.
    noise deep -- ++ -------------- # A lil green
    
alias example:    
    
    alias green='noise deep -- ++ --------------'
EOF

exit 

fi

# fill colors
tilix="#263945" ; crunch="#222D32" ; deep="#0D314D" ; royal="#2842B3" ; adapta="#222D32" ; deep2="#192F49" ; night="#1C2E7D"

case "$1" in
     tilix)          
          color="$tilix"
          shift
          ;;
     crunch)
          color="$crunch"
          shift
          ;;
     deep)
          color="$deep"
          shift
          ;; 
     royal)
          color="$royal"
          shift
          ;;
     adapta)
          color="$adapta"
          shift
          ;;
     deep2)
          color="$deep2"
          shift                    
          ;; 
     night)
          color="$night"
          shift                    
          ;; 
     *)
          color="$tilix"
          ;;
esac

# modulate bright,color,hue
def="100" ; bri="100" ; col="100" ; hue="100"

# bright
mul="0"
if [[ "$1" == +* ]]; then # lighter
    mul=$(( 10 * ${#1} )) ; bri=$(( def + mul ))    
    shift    
elif [[ "$1" == -* ]]; then # darker
    mul=$(( 10 * ${#1} )) ; bri=$(( def - mul ))
    shift
elif [[ "$1" == "_" ]]; then # the same
    shift
fi

# saturation
mul="0"
if [[ "$1" == +* ]]; then # more saturated
    mul=$(( 10 * ${#1} )) ; col=$(( def + mul ))    
    shift    
elif [[ "$1" == -* ]]; then # less saturated
    mul=$(( 10 * ${#1} )) ; col=$(( def - mul ))
    shift
elif [[ "$1" == "_" ]]; then # the same
    shift
fi

# hue
mul="0"
if [[ "$1" == +* ]]; then # more saturated
    mul=$(( 2 * ${#1} )) ; hue=$(( def + mul ))    
    shift    
elif [[ "$1" == -* ]]; then # less saturated
    mul=$(( 2 * ${#1} )) ; hue=$(( def - mul ))
    shift
elif [[ "$1" == "_" ]]; then # the same
    shift
fi

# level dynamics/range
low="18" ; high="24"
mul="0"
if [[ "$1" == +* ]]; then # higher dynamics
    mul=${#1} ; low=$(( low - mul )) ; high=$(( high + mul )) 
    shift    
elif [[ "$1" == -* ]]; then # less dynamics
    mul=${#1} ; low=$(( low + mul )) ; high=$(( high - mul ))
    shift
elif [[ "$1" == "_" ]]; then # the same
    shift
fi

# level start
mul="0"
if [[ "$1" == +* ]]; then # higher (low and high)
    mul=${#1} ; low=$(( low + mul )) ; high=$(( high + mul )) 
    shift    
elif [[ "$1" == -* ]]; then # lower (low and high)
    mul=${#1} ; low=$(( low - mul )) ; high=$(( high - mul ))
    shift
elif [[ "$1" == "_" ]]; then # the same
    shift
fi

# noise
two () {
set -x
convert -size "${mx}x${my}" xc:"gray(50%)" -seed "${RANDOM}" -attenuate 2 +noise poisson -colorspace gray -fill "$color" +level ${low}%,${high}% -tint "100" -sharpen 0x1 -modulate "$bri,$col,$hue" "$file"
set +x
}
# +level 18%,24%
# -sharpen 0x1
# -modulate bright,color,hue

restart() {
if pgrep -x "$1" > /dev/null
then
    (echo "$1 running, restarting"
    killall -w "$1"
    "${1}" &) &
else
    echo "$1 wasn't running"
fi
}

setwall () {
    nitrogen --set-tiled "$file"
}

# action
two
setwall
restart wbar > /dev/null 2>&1

