#!/bin/bash

# pipeMisc

# from a txt file named ~/bin/misc, that may look like:

# geany
# blender 2.9,~/apps/blender-2.79-testbuild1-linux-glibc219-x86_64/blender
# ---
# inkscape

# generate a pipe menu for openbox that could be called from menu.xml like

#    <separator/>
#    <menu id="misc" label="misc" execute="pipeMisc" />
#    <separator/>

# var
database="$HOME/bin/misc"

# xmlescape and trim whitespace bash 
# https://stackoverflow.com/questions/12873682/short-way-to-escape-html-in-bash
xmlescape () {
    echo "$@" | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g; s/'"'"'/\&#39;/g; s/^[ \t]*//;s/[ \t]*$//'
}

# trim whitespace at start/end function (This is now done in that sed sentence ^)
# https://stackoverflow.com/questions/369758/how-to-trim-whitespace-from-a-bash-variable
#trim() {
    #local var="$*"
    ## remove leading whitespace characters
    #var="${var#"${var%%[![:space:]]*}"}"
    ## remove trailing whitespace characters
    #var="${var%"${var##*[![:space:]]}"}"
    #echo -n "$var"
#}

# header
cat << EOFMENU
<openbox_pipe_menu>
EOFMENU

file="$database"
if [ -f "$file" ]; then # start if database

# main
while read -r line; do
    IFS=, read -r label action <<< "$line"
    # skip if label is empty or 1st char is #
    if [ -z "$label" ] || [ "${label:0:1}" == "#" ]; then
        continue
    fi
    # if second field is empty, lets equal it to first
    [ -z "$action" ] && { action="$label"; }
    
    # remove white space at begining/end and xmlescape both

    #label=$(xmlescape $(trim "$label"))
    #action=$(xmlescape $(trim "$action"))
    label=$(xmlescape "$label")
    action=$(xmlescape "$action")

if [[ "$label" != "---" ]]; then # if label="---" then echo separator
# body
cat << EOFMENU
<item label="$label">
    <action name="Execute">
        <execute>$action</execute>
    </action>
</item>
EOFMENU
else
cat << EOFMENU
<separator />
EOFMENU
fi

done < "$database" # < This is where your database is

fi # end if database

# insert places pipemenu if there is pipePlaces script
file="$HOME/bin/pipePlaces"
if [ -f "$file" ]; then
cat << EOFMENU
<separator/>
<menu id="places" label="places" execute="$HOME/bin/pipePlaces" />
EOFMENU
fi

# footer
cat << EOFMENU
</openbox_pipe_menu>
EOFMENU
