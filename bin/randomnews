#!/bin/bash

# random rss news

# warning: lock conditions (edit: seems to be fixed)

# trim spaces
trim() {
    local var="$*"
    # remove leading whitespace characters
    var="${var#"${var%%[![:space:]]*}"}"
    # remove trailing whitespace characters
    var="${var%"${var##*[![:space:]]}"}"
    echo -n "$var"
}

#rss1="$(rsstail -H -N -d -n 50 -u http://rss.slashdot.org/slashdot/slashdotMain?format=xml & { rss="$!" && sleep 1 && kill "$rss" ; wait ; })"

#var="$(rsstail -H -N -d -n 50 -u https://www.phoronix.com/rss.php & { rss="$!" && sleep 1 && kill "$rss" ; })"

phoronix="$( wget "https://www.phoronix.com/rss.php" -O - 2>/dev/null | grep -E "<description>" | sed 's/<.*>\(.*\)<\/.*>/\1/' )"

slashdot="$( wget "http://rss.slashdot.org/slashdot/slashdotMain?format=xml" -O - 2>/dev/null | grep -E "<description>" | sed -e 's/<[^>]*>//g' | grep -v "Read more of this story at Slashdot." | grep -v "Search Slashdot stories" | grep -v "News for nerds, stuff that matters" )"

var="${slashdot}${phoronix}"

#var="$(echo "$var" | sed '/^\s*$/d' | shuf | head -n 1)"

#echo "$var" > tmp.txt

c="0"
until var="$(seen 10 news "$(echo "$var" | sed '/^\s*$/d' | shuf | head -n 1)")"; do

    # lock prevention
    (( c++ ))
    if (( c == 10 )); then 
        echo "Lock, no news for you."
        break
    fi
    
done 
# 2>/dev/null

var=$(trim "$var")

#echo ${#var}

if [[ ${#var} -lt 5 ]] ; then
    >&2 echo "No news for you."
    exit 1
fi

# limit to bytes
var2="$(echo "$var" | head -c 250)"

if [[ "$var" == "$var2" ]]; then

    echo "$var"

else

    echo "$var2..."

fi
