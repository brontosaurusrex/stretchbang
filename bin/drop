#!/bin/bash

# drop

# Drop stuff to be played in mpv to playlist
# This is workaround for chrome not supporting shift+drag behavior

# needs: yad, mpv, youtube-dl, socat

pipe="/tmp/pipe" && touch "$pipe"
log="$HOME/.watched.m3u"

# logging
if ! [ -f "$log" ]; then
    # start fresh
    printf "#EXTM3U\n\n" > "$log" # If this fails, mpv can still play playlist without the header.
fi
touch "$log" || echo "Can't write to $log"

# mpv and pipe
isRunning () {

    # lets query whatever to see if the thing is already running
    if [ ! -f "$pipe" ] && (echo '{ "command": ["get_property", "mpv-version"] }' | socat - "$pipe") &> /dev/null ; then 
        #echo "Mpv instance already running"
        true
    else
        echo "Mpv not running, starting now"
        
        mpv --idle --force-window --autofit-larger=50% --geometry 49% --input-ipc-server="$pipe" --ytdl-format='bestvideo[ext=mp4][width<=1920][height<=1200]+bestaudio[ext=m4a]' &
        sleep 1 # naive approach to wait until pipe is ready
    fi
}

# action
yad --on-top --no-buttons --title="drop urls here" --text="\n\n\nDROP" --geometry=200x200+50-50 --text-align=center --dnd | while read -r url

    do

        isRunning
        
        echo "$url just droped"
        
        # load stuff to mpv pipe
        echo "loadfile \"$url\" append-play" | socat - "$pipe"
        
        # url or file
        if [[ $url == http* ]] ; then 
        
            yt=$(youtube-dl -e "$url") && echo "$yt" && echo # if url, try to get url title
            desc="$yt"
        
        else # assume its a file 
        
            desc="${url##*/}"
        
        fi

        # log
        echo "#EXTINF:,$desc" >> "$log"
        printf "%s\n\n" "$url" >> "$log"
        
        # reset vars
        yt="" ; desc="" ; url=""
        
    done
