#!/bin/bash

# set -x

# getBlender

# get and unpack latest stable blender from
# https://builder.blender.org/download
# This scripts assumes a lot = fragile.

# required
command -v wget >/dev/null 2>&1 || { >&2 echo "I need wget." ; exit 1; }
command -v lynx >/dev/null 2>&1 || { >&2 echo "I need lynx." ; exit 1; }
command -v tar >/dev/null 2>&1 || { >&2 echo "I need tar." ; exit 1; }

# emtpy url
url=""

# for what platform (example x86_64)
bits=$(uname -m)
echo "$bits"

# make apps dir in user home if there is not one already
mkdir -p "$HOME/apps/"

# tmp dir http://mywiki.wooledge.org/BashFAQ/062
tmpdir="/tmp/$RANDOM-$$"
trap '[ -n "$tmpdir" ] && rm -fr "$tmpdir"' EXIT
mkdir -m 700 "$tmpdir" || { echo '!! unable to create a tmpdir' >&2; tmpdir=; exit 1; }

# action
url="$(lynx -listonly -nonumbers -dump https://builder.blender.org/download/ | grep "$bits" | grep linux | grep tar | head -1)"

[[ -z "$url" ]] && (echo "no blender for you" && exit 1)

# test for versions (by damo)
# hash1=latest from blender.org
hash1=$(echo "$url" | awk -F "-" '{print $3}') && echo "builder.blender.org: $hash1"
# hash2= installed version
buildhash2=$(echo "$($HOME/apps/blender/blender -v)" | grep hash)
hash2=${buildhash2##* } && echo "Installed:           $hash2"
if [[ "$hash1" == "$hash2" ]];then 
    echo "Versions are the same. No updates today!"
    exit 0
fi

# download to $tmpdir
echo "downloading from $url"
wget "$url" -O "$tmpdir/blender-tmp"

mkdir "$tmpdir/blender" && echo "unpacking to $tmpdir/blender"
tar xjf "$tmpdir/blender-tmp" --directory "$tmpdir/blender" --strip-components=1

# move away old one
[[ -d $HOME/apps/blender ]] && mv "$HOME/apps/blender" "$HOME/apps/blender_bak_$RANDOM"

# mv new 'blender' dir to ~/apps/blender
mv "$tmpdir/blender" "$HOME/apps/"

# inform
[[ -d $HOME/apps/blender ]] && echo "Your new blender should be in $HOME/apps/blender"
